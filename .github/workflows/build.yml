name: Build

on:
  push:

jobs:
  prepare_upload:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get_tag_name.outputs.tag_name }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Get Tag Name
      id: get_tag_name
      run: echo ::set-output name=tag_name::$(date +'%y%m%d_%H%M%S')
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag_name.outputs.tag_name }}
        release_name: ${{ steps.get_tag_name.outputs.tag_name }}
        draft: false
        prerelease: false

  build_macos_intel:
    runs-on: macos-10.15
    needs: prepare_upload
    steps:
    - uses: actions/checkout@v2
    # In order to create a universal2 application, the version of python3 in /usr/bin has to be used
    - name: Install Requirements
      run: |
        brew install coreutils
        /usr/bin/python3 -m pip install --user -U pyinstaller -r requirements.txt
    - name: Build lazy extractors
      id: lazy_extractors
      run: /usr/bin/python3 devscripts/make_lazy_extractors.py
    - name: Run PyInstaller Script with --onedir
      run: |
        /usr/bin/python3 pyinst.py --onedir
        echo ${{ needs.prepare_upload.outputs.tag_name }} > dist/yt-dlp_macos/yt-dlp_macos.check
        ditto -c -k --sequesterRsrc --keepParent dist/yt-dlp_macos yt-dlp_macos.zip
    - name: Upload yt-dlp MacOS onedir
      id: upload-release-macos-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare_upload.outputs.upload_url }}
        asset_path: ./yt-dlp_macos.zip
        asset_name: yt-dlp_macos_intel.zip
        asset_content_type: application/zip
  build_macos_universal:
    runs-on: macos-11
    needs: prepare_upload
    steps:
    - uses: actions/checkout@v2
    # In order to create a universal2 application, the version of python3 in /usr/bin has to be used
    - name: Install Requirements
      run: |
        brew install coreutils
        /usr/bin/python3 -m pip install --user -U pyinstaller -r requirements.txt
    - name: Build lazy extractors
      id: lazy_extractors
      run: /usr/bin/python3 devscripts/make_lazy_extractors.py
    - name: Run PyInstaller Script with --onedir
      run: |
        /usr/bin/python3 pyinst.py --target-architecture universal2 --onedir
        echo ${{ needs.prepare_upload.outputs.tag_name }} > dist/yt-dlp_macos/yt-dlp_macos.check
        ditto -c -k --sequesterRsrc --keepParent dist/yt-dlp_macos yt-dlp_macos.zip
    - name: Upload yt-dlp MacOS onedir
      id: upload-release-macos-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare_upload.outputs.upload_url }}
        asset_path: ./yt-dlp_macos.zip
        asset_name: yt-dlp_macos.zip
        asset_content_type: application/zip

